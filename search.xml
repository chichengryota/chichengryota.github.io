<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>八个提升搜索效率的小技巧</title>
      <link href="/2020/08/21/ba-ge-ti-gao-sou-suo-xiao-lu-de-ji-qiao/"/>
      <url>/2020/08/21/ba-ge-ti-gao-sou-suo-xiao-lu-de-ji-qiao/</url>
      
        <content type="html"><![CDATA[<h1 id="八个提升搜索效率的小技巧"><a href="#八个提升搜索效率的小技巧" class="headerlink" title="八个提升搜索效率的小技巧"></a>八个提升搜索效率的小技巧</h1><h2 id="一、排除关键词"><a href="#一、排除关键词" class="headerlink" title="一、排除关键词"></a>一、排除关键词</h2><p><strong>减号 + 关键词</strong></p><p>排除不想要的关键词</p><pre class=" language-shell"><code class="language-shell">//如:搜苹果而不是苹果手机苹果 -手机</code></pre><h2 id="二、精确搜索"><a href="#二、精确搜索" class="headerlink" title="二、精确搜索"></a>二、精确搜索</h2><p><strong>给关键词加引号</strong>（ 只搜索引号里的字）</p><pre class=" language-shell"><code class="language-shell">"达拉不崩吧"</code></pre><h2 id="三、指定网站内搜索"><a href="#三、指定网站内搜索" class="headerlink" title="三、指定网站内搜索"></a>三、指定网站内搜索</h2><p><strong>site:域名 + 关键字</strong>（加号为空格）</p><pre class=" language-shell"><code class="language-shell">//只搜索知乎网站上的内容site:zhihu.com 论文</code></pre><h2 id="四、指定文件格式"><a href="#四、指定文件格式" class="headerlink" title="四、指定文件格式"></a>四、指定文件格式</h2><p><strong>filetype:文件格式 + 关键字</strong>（加号为空格）</p><pre class=" language-shell"><code class="language-shell">//只搜索pdf格式的内容filetype:pdf 论文</code></pre><h2 id="五、指定标题搜索"><a href="#五、指定标题搜索" class="headerlink" title="五、指定标题搜索"></a>五、指定标题搜索</h2><p><strong>intitle:关键字</strong></p><p>关键字的内容只出现在标题中</p><h2 id="六、指定正文内搜索"><a href="#六、指定正文内搜索" class="headerlink" title="六、指定正文内搜索"></a>六、指定正文内搜索</h2><p><strong>intext:关键字</strong> 和 <strong>allintext:关键字</strong></p><p>要求在搜索结果的正文里包含这个或这些关键字</p><h2 id="七、指定地址内搜索"><a href="#七、指定地址内搜索" class="headerlink" title="七、指定地址内搜索"></a>七、指定地址内搜索</h2><p><strong>inurl:关键字</strong></p><p>要求在网页的url中包含这个关键字</p><h2 id="八、结合使用"><a href="#八、结合使用" class="headerlink" title="八、结合使用"></a>八、结合使用</h2><pre class=" language-shell"><code class="language-shell">//可以将上面的几种方法结合在一起使用，更精确搜索site:douban.com 亲密关系 intext:罗兰米勒</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>markdown语法</title>
      <link href="/2020/08/21/markdown-ru-men-ji-yu-fa/"/>
      <url>/2020/08/21/markdown-ru-men-ji-yu-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="markdown语法"><a href="#markdown语法" class="headerlink" title="markdown语法"></a>markdown语法</h1><h2 id="1-代码块"><a href="#1-代码块" class="headerlink" title="1.代码块"></a>1.代码块</h2><pre class=" language-shell"><code class="language-shell">代码块语法: ctrl shift K​```加上语言类型```</code></pre><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">10</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><pre class=" language-shell"><code class="language-shell">部分代码: ctrl shift ```代码内容`</code></pre><p><code>var a = 10</code></p><p><code>var a = 20</code></p><h2 id="2-标题"><a href="#2-标题" class="headerlink" title="2.标题"></a>2.标题</h2><pre class=" language-shell"><code class="language-shell"># 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题</code></pre><p><code>ctrl 0</code>到<code>ctrl 4</code>:普通文本、一级到四级标题</p><h2 id="3-字体"><a href="#3-字体" class="headerlink" title="3.字体"></a>3.字体</h2><pre class=" language-shell"><code class="language-shell">//加粗 ctrl B**加粗内容**//斜体 ctrl I*斜体内容*//加粗斜体***加粗斜体内容***//删除线 shift alt 5~~删除线内容~~//下划线 ctrl U<u>下划线内容</u>//代码高亮==代码高亮内容==</code></pre><p><strong>加粗内容</strong></p><p><em>斜体内容</em></p><p><strong><em>加粗斜体内容</em></strong></p><p><del>删除线内容</del></p><p><u>下划线内容</u></p><p>==代码高亮内容==</p><h2 id="4-引用"><a href="#4-引用" class="headerlink" title="4.引用"></a>4.引用</h2><pre class=" language-shell"><code class="language-shell">// 引用语法>作者:某某某>>作者:某某某>>>作者:某某某</code></pre><blockquote><p>作者:某某某</p><blockquote><p>作者:某某某</p><blockquote><p>作者:某某某  </p></blockquote></blockquote></blockquote><h2 id="5-分割线"><a href="#5-分割线" class="headerlink" title="5.分割线"></a>5.分割线</h2><pre class=" language-shell"><code class="language-shell">// 分割线1--- 、___***</code></pre><hr><hr><h2 id="6-图片"><a href="#6-图片" class="headerlink" title="6.图片"></a>6.图片</h2><pre class=" language-shell"><code class="language-shell">// 在线图片/本地图片 ctrl shift I![图片名称](图片路径)![我的图片](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1597578639923&di=bf1a410b9aa501c6db4e869903fe8a1d&imgtype=0&src=http%3A%2F%2Fc.hiphotos.baidu.com%2Fzhidao%2Fpic%2Fitem%2F0824ab18972bd407ff38f2b378899e510eb30984.jpg)</code></pre><p><img src="MarkDown%E5%85%A5%E9%97%A8%E7%BA%A7%E8%AF%AD%E6%B3%95.assets/timg" alt="我的图片"></p><h2 id="7-超链接"><a href="#7-超链接" class="headerlink" title="7.超链接"></a>7.超链接</h2><pre class=" language-shell"><code class="language-shell">// 超链接语法 ctrl K[链接名](链接地址)[bilibili](https://www.bilibili.com/)<https://www.bilibili.com/></code></pre><p><a href="https://www.bilibili.com/">bilibili</a></p><p><a href="https://www.bilibili.com/">https://www.bilibili.com/</a></p><h2 id="8-列表"><a href="#8-列表" class="headerlink" title="8.列表"></a>8.列表</h2><pre class=" language-shell"><code class="language-shell">// 无序列表 -、+、*- 列表一- 列表二- 列表三// 有序列表 1.1. 列表一2. 列表二3. 列表三// 列表嵌套* 一级列表  * 二级列表      * 三级列表</code></pre><ul><li>列表一</li><li>列表二</li><li>列表三</li></ul><ol><li>列表一</li><li>列表二</li><li>列表三</li></ol><ul><li>一级列表<ul><li>二级列表<ul><li>三级列表</li></ul></li></ul></li></ul><h2 id="9-注释"><a href="#9-注释" class="headerlink" title="9.注释"></a>9.注释</h2><pre class=" language-shell"><code class="language-shell">待解释[^1][^1]: 1就是1</code></pre><p>待解释<a href="1%E5%B0%B1%E6%98%AF1">^1</a></p><h2 id="10-表格"><a href="#10-表格" class="headerlink" title="10.表格"></a>10.表格</h2><pre class=" language-shell"><code class="language-shell">// 第一行自带加粗效果，// 第二行分割标题和内容，添加冒号代表对齐方式// ctrl T插入表格| 姓名 | 性别 | 年龄 ||:----|:----:|----:|| 张三 | 男 | 18 || 李四 | 男 | 28 |</code></pre><table><thead><tr><th align="left">姓名</th><th align="center">性别</th><th align="right">年龄</th></tr></thead><tbody><tr><td align="left">张三</td><td align="center">男</td><td align="right">18</td></tr><tr><td align="left">李四</td><td align="center">男</td><td align="right">28</td></tr></tbody></table><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git&amp;GitHub常用指令</title>
      <link href="/2020/08/20/git-github-chang-yong-zhi-ling/"/>
      <url>/2020/08/20/git-github-chang-yong-zhi-ling/</url>
      
        <content type="html"><![CDATA[<h1 id="Git-amp-GitHub常用指令"><a href="#Git-amp-GitHub常用指令" class="headerlink" title="Git&amp;GitHub常用指令"></a>Git&amp;GitHub常用指令</h1><h2 id="Git-命令行操作"><a href="#Git-命令行操作" class="headerlink" title="Git 命令行操作"></a>Git 命令行操作</h2><ol><li><p>本地库初始化:</p><ul><li><p>命令：<code>git init</code></p><p>注意：.git 目录中存放的是本地库相关的子目录和文件，不要删除，也不要胡 乱修改。</p></li></ul></li></ol><ol start="2"><li><p>设置签名</p><p>形式:</p><pre class=" language-shell"><code class="language-shell">用户名：tom Email 地址：goodMorning@atguigu.com作用：区分不同开发人员的身份</code></pre><p>命令:</p><pre class=" language-shell"><code class="language-shell">项目级别/仓库级别：仅在当前本地库范围内有效git config user.name tom_progit config user.email goodMorning_pro@atguigu.com信息保存位置：./.git/config 文件系统用户级别：登录当前操作系统的用户范围git config --global user.name tom_glbgit config --global user.email goodMorning_pro@atguigu.com信息保存位置：~/.gitconfig 文件3</code></pre></li></ol><ol start="3"><li><p>基本操作</p><ul><li><p>状态查看  <code>git status</code> </p><p>查看工作区、暂存区状态</p></li></ul><ul><li><p>添加单个  <code>git add [file name]</code> </p><p>将工作区的“新建/修改”添加到暂存区</p></li><li><p>添加全部  <code>git add .</code></p><p>将工作区的全部“新建/修改”添加到暂存区</p></li><li><p>提交  <code>git commit -m "commit message" [file name]</code> </p><p>将暂存区的内容提交到本地库</p></li><li><p>查看历史记录  <code>git log</code> </p><p>多屏显示控制方式： 空格向下翻页 b 向上翻页 q 退出</p><ul><li>以单行形式显示: <code>git log --pretty=oneline</code></li><li>或 <code>git log --oneline</code> (显示部分)</li><li>显示HEAD@{移动到当前版本需要多少步}<code>git reflog</code></li></ul></li></ul></li></ol><ol start="4"><li><p>前进后退</p><ul><li><p>基于索引值操作[推荐] </p><ul><li><p><code>git reset --hard [局部索引值]</code> </p></li><li><p><code>git reset --hard a6ace91</code> </p></li></ul></li><li><p>使用^符号：只能后退 </p><ul><li><p><code>git reset --hard HEAD^</code> </p><p>注：一个^表示后退一步，n 个表示后退 n 步 </p></li></ul></li><li><p>使用~符号：只能后退 </p><ul><li><p><code>git reset --hard HEAD~n</code> </p><p>注：表示后退 n 步</p></li></ul></li></ul></li></ol><ol start="5"><li><p>reset 命令的三个参数对比</p><ul><li><p>–soft 参数 </p><p>仅仅在本地库移动 HEAD 指针</p></li><li><p>–mixed 参数 </p><p>在本地库移动 HEAD 指针 </p><p>重置暂存区</p></li><li><p>–hard 参数 </p><p>在本地库移动 HEAD 指针 </p><p>重置暂存区 </p><p>重置工作区</p></li></ul></li></ol><ol start="6"><li><p>删除文件并找回</p><ul><li>前提：删除前，文件存在时的状态提交到了本地库。</li><li>操作：<code>git reset --hard [指针位置]</code> <ul><li>删除操作已经提交到本地库：指针位置指向历史记录 </li><li>删除操作尚未提交到本地库：指针位置使用 HEAD</li></ul></li></ul></li></ol><ol start="7"><li><p>比较文件差异</p><ul><li><p><code>git diff [文件名]</code> </p><p>将工作区中的文件和暂存区进行比较 </p></li><li><p><code>git diff [本地库中历史版本] [文件名]</code> </p><p>将工作区中的文件和本地库历史记录比较 </p></li><li><p>不带文件名比较多个文件</p></li></ul></li></ol><ol start="8"><li><p>分支操作</p><ul><li><p>创建分支 <code>git branch [分支名]</code> </p></li><li><p>查看分支 <code>git branch -v</code> </p></li><li><p>切换分支 <code>git checkout [分支名]</code> </p></li><li><p>合并分支 </p><ul><li><p>第一步：切换到接受修改的分支（被合并，增加新内容）上 </p><p><code>git checkout [被合并分支名]</code></p></li><li><p>第二步：执行 merge 命令 </p><p><code>git merge [有新内容分支名]</code></p></li></ul></li><li><p>解决冲突</p><ul><li><p>冲突的表现:<img src="Git&amp;GitHub%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4.assets/image-20200818165333214.png" alt="image-20200818165333214"></p></li><li><p>冲突的解决 </p><ul><li><p>第一步：编辑文件，删除特殊符号 </p></li><li><p>第二步：把文件修改到满意的程度，保存退出 </p></li><li><p>第三步：git add [文件名] </p></li><li><p>第四步：git commit -m “日志信息” </p><ul><li>注意：此时 commit 一定不能带具体文件名</li></ul></li></ul></li></ul></li></ul></li></ol><h2 id="本地库和远程库"><a href="#本地库和远程库" class="headerlink" title="本地库和远程库"></a>本地库和远程库</h2><p><img src="Git&amp;GitHub%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4.assets/image-20200818191919833.png" alt="image-20200818191919833"></p><p><img src="Git&amp;GitHub%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4.assets/image-20200818191944615.png" alt="image-20200818191944615"></p><h2 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h2><ol><li><p>创建远程库地址别名 </p><ul><li><p><code>git remote -v</code> 查看当前所有远程地址别名 </p></li><li><p><code>git remote add [别名] [远程地址]</code></p></li></ul></li><li><p>推送 </p><ul><li><code>git push [别名] [分支名]</code></li></ul></li><li><p>克隆 </p><ul><li><p><code>git clone [远程地址]</code></p></li><li><p>效果 </p><ul><li>完整的把远程库下载到本地 </li><li>创建 origin 远程地址别名 </li><li>初始化本地库</li></ul></li></ul></li><li><p>拉取 </p><ul><li><p><code>pull=fetch+merge</code> </p></li><li><p><code>git fetch [远程库地址别名] [远程分支名]</code> </p></li><li><p><code>git merge [远程库地址别名/远程分支名]</code> </p></li><li><p><code>git pull [远程库地址别名] [远程分支名]</code></p></li></ul></li><li><p>解决冲突 </p><ul><li>要点 <ul><li>如果不是基于 GitHub 远程库的最新版所做的修改，不能推送，必须先拉取。</li><li>拉取下来后如果进入冲突状态，则按照“分支冲突解决”操作解决即可。</li></ul></li></ul></li><li><p>SSH 登录</p><ul><li><p>进入当前用户的家目录 </p><ul><li>$ <code>cd ~</code> </li></ul></li><li><p>删除.ssh 目录 </p><ul><li>$ <code>rm -rvf .ssh</code> </li></ul></li><li><p>运行命令生成.ssh 密钥目录 </p><ul><li><p>$ <code>ssh-keygen -t rsa -C atguigu2018ybuq@aliyun.com</code> </p></li><li><p>[注意：这里-C 这个参数是大写的 C] </p></li></ul></li><li><p>进入.ssh 目录查看文件列表 </p><ul><li>$ <code>cd .ssh </code></li><li>$ <code>ls -lF</code></li></ul></li><li><p>查看 id_rsa.pub 文件内容</p><ul><li>$ <code>cat id_rsa.pub</code> </li></ul></li><li><p>复制 id_rsa.pub 文件内容，登录 GitHub，点击用户头像→Settings→SSH and GPG keys </p></li><li><p>New SSH Key </p></li><li><p>输入复制的密钥信息 </p></li><li><p>回到 Git bash 创建远程地址别名 </p></li><li><p><code>git remote add origin_ssh git@github.com:atguigu2018ybuq/huashan.git</code> </p></li><li><p>推送文件进行测试</p></li></ul></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇博客</title>
      <link href="/2020/08/20/wo-de-di-yi-pian-bo-ke/"/>
      <url>/2020/08/20/wo-de-di-yi-pian-bo-ke/</url>
      
        <content type="html"><![CDATA[<h1 id="随便聊聊"><a href="#随便聊聊" class="headerlink" title="随便聊聊"></a>随便聊聊</h1><p>花了两天的时间搭建改来改去，想设置一些小功能，却被vscode格式化了ejs文件，不懂语法的我只能看着报错不知道怎么搞😂，只能重新再装一遍。最后终于还是把基本的东西都弄好了，顺便学了点yaml和ejs语法，不过到了自己做东西的时候遇到bug真的是让人头秃。好了，就这样后面在慢慢完善吧</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
